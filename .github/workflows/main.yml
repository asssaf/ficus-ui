# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Build output with Buildx
      # https://github.com/docker/build-push-action
      - name: Build 
        id: build
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          file: docker/Dockerfile.build
          context: .
          push: false
          outputs: "type=local,dest=output/"

      - name: Store build results
        uses: actions/upload-artifact@v2
        with:
          name: build-output
          path: output/main.js

  deploy:
    runs-on: ubuntu-latest
    environment: prod
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Download build output
        uses: actions/download-artifact@v2
        with:
          name: build-output
      
      - name: Customize config
        shell: bash
        run: |
          mkdir public
          cp index.html main.js public/
          echo 'var apiKey = "${{ secrets.API_KEY }}"' >> public/config.js
          echo 'var authDomain = "${{ github.event_name == 'pull_request' && secrets.PR_AUTH_DOMAIN || secrets.AUTH_DOMAIN}}"' >> public/config.js
          echo 'var projectId = "${{ secrets.PROJECT_ID }}"' >> public/config.js

      - name: Prepare for deploy
        shell: bash
        env:
          GOOGLE_APPLICATION_CREDENTIALS: key.json
        run: |
          curl -L -o firebase https://firebase.tools/bin/linux/latest
          chmod a+x firebase
          cat > $GOOGLE_APPLICATION_CREDENTIALS <<EOF
          ${{secrets.FIREBASE_SERVICE_ACCOUNT }}
          EOF
          
      - name: Deploy preview
        if: github.event_name == 'pull_request'
        env:
          FIREBASE_DEPLOY_AGENT: "action-hosting-deploy"
          GOOGLE_APPLICATION_CREDENTIALS: key.json
        run: |
          ./firebase --project "${{ secrets.PROJECT_ID }}" hosting:channel:deploy previewch

      - name: Deploy live
        if: github.event_name != 'pull_request'
        env:
          FIREBASE_DEPLOY_AGENT: "action-hosting-deploy"
          GOOGLE_APPLICATION_CREDENTIALS: key.json
        run: |
          ./firebase --project "${{ secrets.PROJECT_ID }}" deploy --only hosting
